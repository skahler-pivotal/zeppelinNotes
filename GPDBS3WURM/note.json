{
  "paragraphs": [
    {
      "text": "%md\n## S3 + GPDB processing \"device\" data with Hot/Cold storage",
      "dateUpdated": "Oct 6, 2016 12:20:28 AM",
      "config": {
        "tableHide": false,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "colWidth": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1472674123707_1386083887",
      "id": "20160831-200843_603171234",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003eS3 + GPDB processing \u0026ldquo;device\u0026rdquo; data with Hot/Cold storage\u003c/h2\u003e\n"
      },
      "dateCreated": "Aug 31, 2016 8:08:43 PM",
      "dateStarted": "Oct 5, 2016 11:58:09 PM",
      "dateFinished": "Oct 5, 2016 11:58:09 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\u0026nbsp;\n*Note - if it suspected the data exists. head to the bottom of the Notebook and run the cleanup portion*",
      "dateUpdated": "Oct 6, 2016 12:20:33 AM",
      "config": {
        "colWidth": 3.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475712924926_-1956259867",
      "id": "20161006-001524_929627050",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003e\u0026nbsp;\n\u003cbr  /\u003e\u003cem\u003eNote - if it suspected the data exists. head to the bottom of the Notebook and run the cleanup portion\u003c/em\u003e\u003c/p\u003e\n"
      },
      "dateCreated": "Oct 6, 2016 12:15:24 AM",
      "dateStarted": "Oct 6, 2016 12:20:18 AM",
      "dateFinished": "Oct 6, 2016 12:20:18 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n####It\u0027s time to go bigger\n\n####In a previous example we been worked with a dataset that has 100k elements in it of IOT device data. Let\u0027s try a dataset that is a little bigger. This dataset is generated by creatures in a game. Their statistics are constantly recorded to understand state much like a device or sensor would in the real world.",
      "dateUpdated": "Oct 6, 2016 5:14:59 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "colWidth": 6.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475679142533_-1235426192",
      "id": "20161005-145222_1304935136",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch4\u003eIt\u0027s time to go bigger\u003c/h4\u003e\n\u003ch4\u003eIn a previous example we been worked with a dataset that has 100k elements in it of IOT device data. Let\u0027s try a dataset that is a little bigger. This dataset is generated by creatures in a game. Their statistics are constantly recorded to understand state much like a device or sensor would in the real world.\u003c/h4\u003e\n"
      },
      "dateCreated": "Oct 5, 2016 2:52:22 PM",
      "dateStarted": "Oct 6, 2016 12:24:10 AM",
      "dateFinished": "Oct 6, 2016 12:24:10 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\n\nDROP EXTERNAL TABLE IF EXISTS s3_wurm_20160415;\n\nCREATE EXTERNAL TABLE s3_wurm_20160415 (\n    wurmid bigint, \n    name text, \n    age int, \n    hunger int, \n    thirst int, \n    damage int, \n    gender int, \n    posx float8, \n    posy float8, \n    recordedAt timestamp\n    )\nLOCATION ( \u0027s3://s3.amazonaws.com/s3gpdb/wurm_granular/critter_20160415 config\u003d/home/gpadmin/s3.conf\u0027 )\nFORMAT \u0027TEXT\u0027 ( DELIMITER \u0027|\u0027 NULL AS \u0027\u0027);",
      "dateUpdated": "Oct 6, 2016 3:06:50 PM",
      "config": {
        "tableHide": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "colWidth": 6.0,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475679293520_538313854",
      "id": "20161005-145453_596880704",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "Update Count\n0\n"
      },
      "dateCreated": "Oct 5, 2016 2:54:53 PM",
      "dateStarted": "Oct 6, 2016 3:06:46 PM",
      "dateFinished": "Oct 6, 2016 3:06:46 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n####Here we see data that could be seen as similar to device data: name of the device, unique identifer, position, some state data and a timestamp",
      "dateUpdated": "Oct 6, 2016 5:15:05 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475713270063_1235169318",
      "id": "20161006-002110_667495113",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch4\u003eHere we see data that could be seen as similar to device data: name of the device, unique identifer, position, some state data and a timestamp\u003c/h4\u003e\n"
      },
      "dateCreated": "Oct 6, 2016 12:21:10 AM",
      "dateStarted": "Oct 6, 2016 12:22:44 AM",
      "dateFinished": "Oct 6, 2016 12:22:44 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\nSELECT * FROM s3_wurm_20160415 LIMIT 3;",
      "dateUpdated": "Oct 6, 2016 3:06:59 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 123.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "wurmid",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "name",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "wurmid",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "name",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475695488392_-1683440228",
      "id": "20161005-192448_1106634423",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "wurmid\tname\tage\thunger\tthirst\tdamage\tgender\tposx\tposy\trecordedat\n14015663617\tBrown cow\t49\t4500\t0\t\t1\t4968.23974609375\t530.30847167968795\t2016-04-15 14:20:01\n90972753409\tDog\t48\t0\t0\t\t0\t3419.2265625\t5477.6943359375\t2016-04-15 14:20:01\n195914239489\tBrown cow\t49\t0\t0\t\t1\t2817.8359375\t4747.7373046875\t2016-04-15 14:20:01\n"
      },
      "dateCreated": "Oct 5, 2016 7:24:48 PM",
      "dateStarted": "Oct 6, 2016 3:06:59 PM",
      "dateFinished": "Oct 6, 2016 3:07:00 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n####Selecting a count takes significantly longer.\n\n####The data set is made up of 59 files and over 1/2 GB of data in S3. We are accesing it with a single node. So what we did is pull in and parse 500MB of data from S3 to the database and then parse it on the fly.\n\n####In the previous query it was smart enough to know it needed only three rows and cut off the transfer of data early",
      "dateUpdated": "Oct 6, 2016 2:38:49 PM",
      "config": {
        "tableHide": false,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "colWidth": 6.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475681246131_1800045583",
      "id": "20161005-152726_648476545",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch4\u003eSelecting a count takes significantly longer.\u003c/h4\u003e\n\u003ch4\u003eThe data set is made up of 59 files and over 1/2 GB of data in S3. We are accesing it with a single node. So what we did is pull in and parse 500MB of data from S3 to the database and then parse it on the fly.\u003c/h4\u003e\n\u003ch4\u003eIn the previous query it was smart enough to know it needed only three rows and cut off the transfer of data early\u003c/h4\u003e\n"
      },
      "dateCreated": "Oct 5, 2016 3:27:26 PM",
      "dateStarted": "Oct 6, 2016 2:38:48 PM",
      "dateFinished": "Oct 6, 2016 2:38:48 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\nSELECT COUNT(1) FROM s3_wurm_20160415;",
      "dateUpdated": "Oct 6, 2016 3:07:06 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 102.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "count",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 6.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475679890634_850742520",
      "id": "20161005-150450_624039901",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "count\n8392195\n"
      },
      "dateCreated": "Oct 5, 2016 3:04:50 PM",
      "dateStarted": "Oct 6, 2016 3:07:06 PM",
      "dateFinished": "Oct 6, 2016 3:07:29 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n####Maybe that is a bit too long for interactive querying\n\n####What we can we do to speed it up? \n\n####Move the data local and see if it speeds up our access time",
      "dateUpdated": "Oct 5, 2016 11:38:17 PM",
      "config": {
        "tableHide": false,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "colWidth": 6.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475681414734_-1139357748",
      "id": "20161005-153014_1355941495",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch4\u003eMaybe that is a bit too long for interactive querying\u003c/h4\u003e\n\u003ch4\u003eWhat we can we do to speed it up?\u003c/h4\u003e\n\u003ch4\u003eMove the data local and see if it speeds up our access time\u003c/h4\u003e\n"
      },
      "dateCreated": "Oct 5, 2016 3:30:14 PM",
      "dateStarted": "Oct 5, 2016 9:58:01 PM",
      "dateFinished": "Oct 5, 2016 9:58:01 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\n\nDROP TABLE IF EXISTS wurm_20160415;\n\nCREATE TABLE wurm_20160415 AS (SELECT * FROM s3_wurm_20160415) DISTRIBUTED BY (wurmid);\n\nANALYZE wurm_20160415;\n",
      "dateUpdated": "Oct 6, 2016 3:07:37 PM",
      "config": {
        "tableHide": false,
        "graph": {
          "mode": "table",
          "height": 94.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 6.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475680587333_1059874067",
      "id": "20161005-151627_1496028383",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "Update Count\n0\n"
      },
      "dateCreated": "Oct 5, 2016 3:16:27 PM",
      "dateStarted": "Oct 6, 2016 3:07:37 PM",
      "dateFinished": "Oct 6, 2016 3:08:14 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n####Now lets check\n\n####Should be faster pulling from local disks",
      "dateUpdated": "Oct 5, 2016 11:38:15 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "colWidth": 6.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475681849365_1837071778",
      "id": "20161005-153729_1357079027",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch4\u003eNow lets check\u003c/h4\u003e\n\u003ch4\u003eShould be faster pulling from local disks\u003c/h4\u003e\n"
      },
      "dateCreated": "Oct 5, 2016 3:37:29 PM",
      "dateStarted": "Oct 5, 2016 3:38:39 PM",
      "dateFinished": "Oct 5, 2016 3:38:39 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\nSELECT COUNT(1) FROM wurm_20160415;",
      "dateUpdated": "Oct 6, 2016 3:27:08 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 101.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "count",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 6.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475681933090_-1234840061",
      "id": "20161005-153853_1892294283",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "count\n8392195\n"
      },
      "dateCreated": "Oct 5, 2016 3:38:53 PM",
      "dateStarted": "Oct 6, 2016 3:27:08 PM",
      "dateFinished": "Oct 6, 2016 3:27:09 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n####Actually though, what we need to consider is that there is more data in the archive.\n \n####There is data out there for multiple days though, 4/15 - 4/24. We could put this all on one big external table but then we\u0027d need to scan 10GB of external data every time the table was selected.\n\n####Let\u0027s say our use case involves doing some analytics and possible troubleshooting on the last couple days of data in real time. Though we do have a few reports we run on the whole time period.\n\n####We could move it all to the database, but we probably won\u0027t look at that deep data often if at all, and that would add millions of records we don\u0027t need to the database.\n\n####So let\u0027s take a look at Greenplum\u0027s ability to partition data. Partitioning can be used so that queries targeting a certain set of data only access the partitions that pertain to that. In addition the storage setting for partitions can be individually tuned for their use case.\n\n####In this instance we can use table partitioning and create a hot/cold storage setup.",
      "dateUpdated": "Oct 5, 2016 11:38:12 PM",
      "config": {
        "tableHide": false,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "colWidth": 10.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475680013088_-1141301750",
      "id": "20161005-150653_1624640026",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch4\u003eActually though, what we need to consider is that there is more data in the archive.\u003c/h4\u003e\n\u003ch4\u003eThere is data out there for multiple days though, 4/15 - 4/24. We could put this all on one big external table but then we\u0027d need to scan 10GB of external data every time the table was selected.\u003c/h4\u003e\n\u003ch4\u003eLet\u0027s say our use case involves doing some analytics and possible troubleshooting on the last couple days of data in real time. Though we do have a few reports we run on the whole time period.\u003c/h4\u003e\n\u003ch4\u003eWe could move it all to the database, but we probably won\u0027t look at that deep data often if at all, and that would add millions of records we don\u0027t need to the database.\u003c/h4\u003e\n\u003ch4\u003eSo let\u0027s take a look at Greenplum\u0027s ability to partition data. Partitioning can be used so that queries targeting a certain set of data only access the partitions that pertain to that. In addition the storage setting for partitions can be individually tuned for their use case.\u003c/h4\u003e\n\u003ch4\u003eIn this instance we can use table partitioning and create a hot/cold storage setup.\u003c/h4\u003e\n"
      },
      "dateCreated": "Oct 5, 2016 3:06:53 PM",
      "dateStarted": "Oct 5, 2016 11:38:10 PM",
      "dateFinished": "Oct 5, 2016 11:38:10 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\u0026nbsp;\n####First we need to access the data so we create external tables that map to each of the folders containing data in S3\n\n####This is a fast process as we are only creating a metadata structure in the catalog with a pointer to where the actual data exists",
      "dateUpdated": "Oct 5, 2016 11:38:31 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "colWidth": 6.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475696590006_2065343450",
      "id": "20161005-194310_154304837",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ch4\u003eFirst we need to access the data so we create external tables that map to each of the folders containing data in S3\u003c/h4\u003e\n\u003ch4\u003eThis is a fast process as we are only creating a metadata structure in the catalog with a pointer to where the actual data exists\u003c/h4\u003e\n"
      },
      "dateCreated": "Oct 5, 2016 7:43:10 PM",
      "dateStarted": "Oct 5, 2016 11:13:26 PM",
      "dateFinished": "Oct 5, 2016 11:13:26 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\n\nSELECT \u0027creating a large number of external tables\u0027;\n\nDROP EXTERNAL TABLE IF EXISTS s3_wurm_20160416 CASCADE;\nDROP EXTERNAL TABLE IF EXISTS s3_wurm_20160417 CASCADE;\nDROP EXTERNAL TABLE IF EXISTS s3_wurm_20160418 CASCADE;\nDROP EXTERNAL TABLE IF EXISTS s3_wurm_20160419 CASCADE;\nDROP EXTERNAL TABLE IF EXISTS s3_wurm_20160420 CASCADE;\nDROP EXTERNAL TABLE IF EXISTS s3_wurm_20160421 CASCADE;\nDROP EXTERNAL TABLE IF EXISTS s3_wurm_20160422 CASCADE;\nDROP EXTERNAL TABLE IF EXISTS s3_wurm_20160423 CASCADE;\nDROP EXTERNAL TABLE IF EXISTS s3_wurm_20160424 CASCADE;\n\nCREATE EXTERNAL TABLE s3_wurm_20160416 (\n    wurmid bigint, \n    name text, \n    age int, \n    hunger int, \n    thirst int, \n    damage int, \n    gender int, \n    posx float8, \n    posy float8, \n    recordedAt timestamp\n    )\nLOCATION ( \u0027s3://s3.amazonaws.com/s3gpdb/wurm_granular/critter_20160416 config\u003d/home/gpadmin/s3.conf\u0027 )\nFORMAT \u0027TEXT\u0027 ( DELIMITER \u0027|\u0027 NULL AS \u0027\u0027);\n\nCREATE EXTERNAL TABLE s3_wurm_20160417 (\n    wurmid bigint, \n    name text, \n    age int, \n    hunger int, \n    thirst int, \n    damage int, \n    gender int, \n    posx float8, \n    posy float8, \n    recordedAt timestamp\n    )\nLOCATION ( \u0027s3://s3.amazonaws.com/s3gpdb/wurm_granular/critter_20160417 config\u003d/home/gpadmin/s3.conf\u0027 )\nFORMAT \u0027TEXT\u0027 ( DELIMITER \u0027|\u0027 NULL AS \u0027\u0027);\n\nCREATE EXTERNAL TABLE s3_wurm_20160418 (\n    wurmid bigint, \n    name text, \n    age int, \n    hunger int, \n    thirst int, \n    damage int, \n    gender int, \n    posx float8, \n    posy float8, \n    recordedAt timestamp\n    )\nLOCATION ( \u0027s3://s3.amazonaws.com/s3gpdb/wurm_granular/critter_20160418 config\u003d/home/gpadmin/s3.conf\u0027 )\nFORMAT \u0027TEXT\u0027 ( DELIMITER \u0027|\u0027 NULL AS \u0027\u0027);\n\nCREATE EXTERNAL TABLE s3_wurm_20160419 (\n    wurmid bigint, \n    name text, \n    age int, \n    hunger int, \n    thirst int, \n    damage int, \n    gender int, \n    posx float8, \n    posy float8, \n    recordedAt timestamp\n    )\nLOCATION ( \u0027s3://s3.amazonaws.com/s3gpdb/wurm_granular/critter_20160419 config\u003d/home/gpadmin/s3.conf\u0027 )\nFORMAT \u0027TEXT\u0027 ( DELIMITER \u0027|\u0027 NULL AS \u0027\u0027);\n\nCREATE EXTERNAL TABLE s3_wurm_20160420 (\n    wurmid bigint, \n    name text, \n    age int, \n    hunger int, \n    thirst int, \n    damage int, \n    gender int, \n    posx float8, \n    posy float8, \n    recordedAt timestamp\n    )\nLOCATION ( \u0027s3://s3.amazonaws.com/s3gpdb/wurm_granular/critter_20160420 config\u003d/home/gpadmin/s3.conf\u0027 )\nFORMAT \u0027TEXT\u0027 ( DELIMITER \u0027|\u0027 NULL AS \u0027\u0027);\n\nCREATE EXTERNAL TABLE s3_wurm_20160421 (\n    wurmid bigint, \n    name text, \n    age int, \n    hunger int, \n    thirst int, \n    damage int, \n    gender int, \n    posx float8, \n    posy float8, \n    recordedAt timestamp\n    )\nLOCATION ( \u0027s3://s3.amazonaws.com/s3gpdb/wurm_granular/critter_20160421 config\u003d/home/gpadmin/s3.conf\u0027 )\nFORMAT \u0027TEXT\u0027 ( DELIMITER \u0027|\u0027 NULL AS \u0027\u0027);\n\nCREATE EXTERNAL TABLE s3_wurm_20160422 (\n    wurmid bigint, \n    name text, \n    age int, \n    hunger int, \n    thirst int, \n    damage int, \n    gender int, \n    posx float8, \n    posy float8, \n    recordedAt timestamp\n    )\nLOCATION ( \u0027s3://s3.amazonaws.com/s3gpdb/wurm_granular/critter_20160422 config\u003d/home/gpadmin/s3.conf\u0027 )\nFORMAT \u0027TEXT\u0027 ( DELIMITER \u0027|\u0027 NULL AS \u0027\u0027);\n\nCREATE EXTERNAL TABLE s3_wurm_20160423 (\n    wurmid bigint, \n    name text, \n    age int, \n    hunger int, \n    thirst int, \n    damage int, \n    gender int, \n    posx float8, \n    posy float8, \n    recordedAt timestamp\n    )\nLOCATION ( \u0027s3://s3.amazonaws.com/s3gpdb/wurm_granular/critter_20160423 config\u003d/home/gpadmin/s3.conf\u0027 )\nFORMAT \u0027TEXT\u0027 ( DELIMITER \u0027|\u0027 NULL AS \u0027\u0027);\n\nCREATE EXTERNAL TABLE s3_wurm_20160424 (\n    wurmid bigint, \n    name text, \n    age int, \n    hunger int, \n    thirst int, \n    damage int, \n    gender int, \n    posx float8, \n    posy float8, \n    recordedAt timestamp\n    )\nLOCATION ( \u0027s3://s3.amazonaws.com/s3gpdb/wurm_granular/critter_20160424 config\u003d/home/gpadmin/s3.conf\u0027 )\nFORMAT \u0027TEXT\u0027 ( DELIMITER \u0027|\u0027 NULL AS \u0027\u0027);",
      "dateUpdated": "Oct 6, 2016 3:27:17 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 94.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "?column?",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "?column?",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "colWidth": 6.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475695972767_-1239939117",
      "id": "20161005-193252_1560070620",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "?column?\ncreating a large number of external tables\n"
      },
      "dateCreated": "Oct 5, 2016 7:32:52 PM",
      "dateStarted": "Oct 6, 2016 3:27:17 PM",
      "dateFinished": "Oct 6, 2016 3:27:17 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n####On to creating internal tables\n\n####We will match the external table schmea we are using in order to create the internal table. This process actually takes a little longer as we are creating physical files on the local machine to store data.\n\n####Instead of creating many individual tables we will also create one table and use partitioning to break up the table by day.",
      "dateUpdated": "Oct 5, 2016 11:38:55 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "colWidth": 6.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475696770470_-1072067124",
      "id": "20161005-194610_512170676",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch4\u003eOn to creating internal tables\u003c/h4\u003e\n\u003ch4\u003eWe will match the external table schmea we are using in order to create the internal table. This process actually takes a little longer as we are creating physical files on the local machine to store data.\u003c/h4\u003e\n\u003ch4\u003eInstead of creating many individual tables we will also create one table and use partitioning to break up the table by day.\u003c/h4\u003e\n"
      },
      "dateCreated": "Oct 5, 2016 7:46:10 PM",
      "dateStarted": "Oct 5, 2016 11:14:59 PM",
      "dateFinished": "Oct 5, 2016 11:14:59 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\nDROP TABLE IF EXISTS wurm_partitioned;\n\nCREATE TABLE wurm_partitioned (LIKE wurm_20160415)\nDISTRIBUTED BY (wurmid)\nPARTITION BY RANGE (recordedAt) (\n    START (date \u00272016-04-14\u0027) INCLUSIVE\n    END (date \u00272016-04-25\u0027) EXCLUSIVE\n    EVERY (INTERVAL \u00271 day\u0027)\n    ); ",
      "dateUpdated": "Oct 6, 2016 3:27:21 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 94.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "colWidth": 6.0,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475681147983_1565443988",
      "id": "20161005-152547_2062169754",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "Update Count\n0\n"
      },
      "dateCreated": "Oct 5, 2016 3:25:47 PM",
      "dateStarted": "Oct 6, 2016 3:27:21 PM",
      "dateFinished": "Oct 6, 2016 3:27:22 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n####Now we have data sitting in S3 we can access with external tables and a partitioned table created on local storage but no data in it.",
      "dateUpdated": "Oct 6, 2016 2:41:33 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475681109994_-25739545",
      "id": "20161005-152509_404649531",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch4\u003eNow we have data sitting in S3 we can access with external tables and a partitioned table created on local storage but no data in it.\u003c/h4\u003e\n"
      },
      "dateCreated": "Oct 5, 2016 3:25:09 PM",
      "dateStarted": "Oct 6, 2016 2:41:28 PM",
      "dateFinished": "Oct 6, 2016 2:41:28 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\u0026nbsp;\n####Next we copy data from our external tables to local for the two days we are interested in\n\n####It\u0027s not very complicated syntax, but we\u0027re going to bring in 20 million records from S3 into a single node per day. \n\n####So it will take a couple of minutes each. It should be noted that adding more nodes would allow us to process the data in parallel. Each node reaches out and ingests data, thus adding more nodes would greatly decrease the time to ingest data.",
      "dateUpdated": "Oct 6, 2016 2:42:59 PM",
      "config": {
        "tableHide": false,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "colWidth": 9.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475700065460_-1886665389",
      "id": "20161005-204105_1685162144",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ch4\u003eNext we copy data from our external tables to local for the two days we are interested in\u003c/h4\u003e\n\u003ch4\u003eIt\u0027s not very complicated syntax, but we\u0027re going to bring in 20 million records from S3 into a single node per day.\u003c/h4\u003e\n\u003ch4\u003eSo it will take a couple of minutes each. It should be noted that adding more nodes would allow us to process the data in parallel. Each node reaches out and ingests data, thus adding more nodes would greatly decrease the time to ingest data.\u003c/h4\u003e\n"
      },
      "dateCreated": "Oct 5, 2016 8:41:05 PM",
      "dateStarted": "Oct 6, 2016 2:42:57 PM",
      "dateFinished": "Oct 6, 2016 2:42:57 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\nINSERT INTO wurm_partitioned \nSELECT * FROM s3_wurm_20160424;",
      "dateUpdated": "Oct 6, 2016 3:27:29 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 99.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 4.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475700162514_-1051821572",
      "id": "20161005-204242_1822754752",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "Update Count\n20351874\n"
      },
      "dateCreated": "Oct 5, 2016 8:42:42 PM",
      "dateStarted": "Oct 6, 2016 3:27:29 PM",
      "dateFinished": "Oct 6, 2016 3:29:13 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\nINSERT INTO wurm_partitioned \nSELECT * FROM s3_wurm_20160423;",
      "dateUpdated": "Oct 6, 2016 3:44:34 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 95.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 4.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475700621214_-332683195",
      "id": "20161005-205021_1380091207",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "Update Count\n20310577\n"
      },
      "dateCreated": "Oct 5, 2016 8:50:21 PM",
      "dateStarted": "Oct 6, 2016 3:44:34 PM",
      "dateFinished": "Oct 6, 2016 3:45:59 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\nANALYZE wurm_partitioned;",
      "dateUpdated": "Oct 6, 2016 3:46:24 PM",
      "config": {
        "tableHide": true,
        "graph": {
          "mode": "table",
          "height": 99.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 4.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475709464584_2115840413",
      "id": "20161005-231744_1978623027",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "Update Count\n0\n"
      },
      "dateCreated": "Oct 5, 2016 11:17:44 PM",
      "dateStarted": "Oct 6, 2016 3:46:24 PM",
      "dateFinished": "Oct 6, 2016 3:46:35 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n####Now we\u0027ve moved a little over 40 million records from external storage to internal storage can we query them?",
      "dateUpdated": "Oct 5, 2016 11:39:17 PM",
      "config": {
        "tableHide": false,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475701500880_1127899130",
      "id": "20161005-210500_93992385",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch4\u003eNow we\u0027ve moved a little over 40 million records from external storage to internal storage can we query them?\u003c/h4\u003e\n"
      },
      "dateCreated": "Oct 5, 2016 9:05:00 PM",
      "dateStarted": "Oct 5, 2016 10:06:37 PM",
      "dateFinished": "Oct 5, 2016 10:06:37 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\nSELECT COUNT(1) from wurm_partitioned;",
      "dateUpdated": "Oct 6, 2016 3:46:51 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 99.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "count",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 6.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475701883077_397044786",
      "id": "20161005-211123_2099488379",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "count\n40662451\n"
      },
      "dateCreated": "Oct 5, 2016 9:11:23 PM",
      "dateStarted": "Oct 6, 2016 3:46:51 PM",
      "dateFinished": "Oct 6, 2016 3:46:56 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\nSELECT COUNT(1) FROM wurm_partitioned \nWHERE recordedAt BETWEEN \u00272016-04-23 00:00:00\u0027 AND \u00272016-04-23 23:59:59\u0027",
      "dateUpdated": "Oct 6, 2016 3:49:58 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 107.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "count",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 6.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475702804379_1543878921",
      "id": "20161005-212644_760757483",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "count\n20310577\n"
      },
      "dateCreated": "Oct 5, 2016 9:26:44 PM",
      "dateStarted": "Oct 6, 2016 3:49:58 PM",
      "dateFinished": "Oct 6, 2016 3:50:02 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n####We can see that the time to query a smaller set of data on disk can be faster than the whole.\n\n####This is because partition elimination done by the optimizer can intelligently decide to not scan data which will not apply to the query",
      "dateUpdated": "Oct 5, 2016 11:39:23 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475702918102_-1480846721",
      "id": "20161005-212838_634675290",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch4\u003eWe can see that the time to query a smaller set of data on disk can be faster than the whole.\u003c/h4\u003e\n\u003ch4\u003eThis is because partition elimination done by the optimizer can intelligently decide to not scan data which will not apply to the query\u003c/h4\u003e\n"
      },
      "dateCreated": "Oct 5, 2016 9:28:38 PM",
      "dateStarted": "Oct 5, 2016 10:09:21 PM",
      "dateFinished": "Oct 5, 2016 10:09:21 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\nEXPLAIN SELECT COUNT(1) from wurm_partitioned;",
      "dateUpdated": "Oct 6, 2016 3:50:14 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 10.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475709781729_629766662",
      "id": "20161005-232301_9928623",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "QUERY PLAN\nAggregate  (cost\u003d628281.35..628281.36 rows\u003d1 width\u003d8)\n  -\u003e  Gather Motion 4:1  (slice1; segments: 4)  (cost\u003d628281.28..628281.34 rows\u003d1 width\u003d8)\n        -\u003e  Aggregate  (cost\u003d628281.28..628281.29 rows\u003d1 width\u003d8)\n              -\u003e  Append  (cost\u003d0.00..526618.80 rows\u003d10166248 width\u003d0)\n                    -\u003e  Seq Scan on wurm_partitioned_1_prt_1 wurm_partitioned  (cost\u003d0.00..1.00 rows\u003d1 width\u003d0)\n                    -\u003e  Seq Scan on wurm_partitioned_1_prt_2 wurm_partitioned  (cost\u003d0.00..1.00 rows\u003d1 width\u003d0)\n                    -\u003e  Seq Scan on wurm_partitioned_1_prt_3 wurm_partitioned  (cost\u003d0.00..1.00 rows\u003d1 width\u003d0)\n                    -\u003e  Seq Scan on wurm_partitioned_1_prt_4 wurm_partitioned  (cost\u003d0.00..1.00 rows\u003d1 width\u003d0)\n                    -\u003e  Seq Scan on wurm_partitioned_1_prt_5 wurm_partitioned  (cost\u003d0.00..1.00 rows\u003d1 width\u003d0)\n                    -\u003e  Seq Scan on wurm_partitioned_1_prt_6 wurm_partitioned  (cost\u003d0.00..1.00 rows\u003d1 width\u003d0)\n                    -\u003e  Seq Scan on wurm_partitioned_1_prt_7 wurm_partitioned  (cost\u003d0.00..1.00 rows\u003d1 width\u003d0)\n                    -\u003e  Seq Scan on wurm_partitioned_1_prt_8 wurm_partitioned  (cost\u003d0.00..1.00 rows\u003d1 width\u003d0)\n                    -\u003e  Seq Scan on wurm_partitioned_1_prt_9 wurm_partitioned  (cost\u003d0.00..1.00 rows\u003d1 width\u003d0)\n                    -\u003e  Seq Scan on wurm_partitioned_1_prt_10 wurm_partitioned  (cost\u003d0.00..263010.68 rows\u003d5077242 width\u003d0)\n                    -\u003e  Seq Scan on wurm_partitioned_1_prt_11 wurm_partitioned  (cost\u003d0.00..263599.12 rows\u003d5089003 width\u003d0)\nOptimizer status: legacy query optimizer\n"
      },
      "dateCreated": "Oct 5, 2016 11:23:01 PM",
      "dateStarted": "Oct 6, 2016 3:50:14 PM",
      "dateFinished": "Oct 6, 2016 3:50:15 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\u0026nbsp;\nNote this will show local partitions until we do a swap out later. If refereshed at that point it will show the scans as external.",
      "dateUpdated": "Oct 6, 2016 12:14:46 AM",
      "config": {
        "colWidth": 2.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475712825482_-286940015",
      "id": "20161006-001345_690535959",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003e\u0026nbsp;\n\u003cbr  /\u003eNote this will show local partitions until we do a swap out later. If refereshed at that point it will show the scans as external.\u003c/p\u003e\n"
      },
      "dateCreated": "Oct 6, 2016 12:13:45 AM",
      "dateStarted": "Oct 6, 2016 12:14:44 AM",
      "dateFinished": "Oct 6, 2016 12:14:45 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\nEXPLAIN SELECT COUNT(1) FROM wurm_partitioned WHERE recordedAt BETWEEN \u00272016-04-23 00:00:00\u0027 AND \u00272016-04-23 23:59:59\u0027",
      "dateUpdated": "Oct 6, 2016 3:50:27 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "count",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475702110747_-1528135254",
      "id": "20161005-211510_1676769418",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "QUERY PLAN\nAggregate  (cost\u003d415318.13..415318.14 rows\u003d1 width\u003d8)\n  -\u003e  Gather Motion 4:1  (slice1; segments: 4)  (cost\u003d415318.05..415318.11 rows\u003d1 width\u003d8)\n        -\u003e  Aggregate  (cost\u003d415318.05..415318.06 rows\u003d1 width\u003d8)\n              -\u003e  Append  (cost\u003d0.00..364555.52 rows\u003d5076253 width\u003d0)\n                    -\u003e  Seq Scan on wurm_partitioned_1_prt_10 wurm_partitioned  (cost\u003d0.00..364555.52 rows\u003d5076253 width\u003d0)\n                          Filter: recordedat \u003e\u003d \u00272016-04-23 00:00:00\u0027::timestamp without time zone AND recordedat \u003c\u003d \u00272016-04-23 23:59:59\u0027::timestamp without time zone\nOptimizer status: legacy query optimizer\n"
      },
      "dateCreated": "Oct 5, 2016 9:15:10 PM",
      "dateStarted": "Oct 6, 2016 3:50:28 PM",
      "dateFinished": "Oct 6, 2016 3:50:28 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n####So 4/23 and 4/24 are available in the database for the more interactive queries we are doing.\n\n####What about the data for 4/15 thru 4/22 we want this data to still be available.\n\n####We could potentially use UNION statments to join together results from queries to external tables to internal tables.\n\n####Another option is that we can swap out the pointers for those partitons on local disk to the external definitions.\n\n####Normally when swapping in a table to be a partition Greenplum does data validation. It makes sure the data conforms to what should be represented in the partiton. When working with external tables it is unable to do this as the data in the external location could change so it needs to be enacted \u0027WITHOUT VALIDATION\u0027 ",
      "dateUpdated": "Oct 5, 2016 11:39:29 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475703192093_-387604362",
      "id": "20161005-213312_1799424856",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch4\u003eSo 4/23 and 4/24 are available in the database for the more interactive queries we are doing.\u003c/h4\u003e\n\u003ch4\u003eWhat about the data for 4/15 thru 4/22 we want this data to still be available.\u003c/h4\u003e\n\u003ch4\u003eWe could potentially use UNION statments to join together results from queries to external tables to internal tables.\u003c/h4\u003e\n\u003ch4\u003eAnother option is that we can swap out the pointers for those partitons on local disk to the external definitions.\u003c/h4\u003e\n\u003ch4\u003eNormally when swapping in a table to be a partition Greenplum does data validation. It makes sure the data conforms to what should be represented in the partiton. When working with external tables it is unable to do this as the data in the external location could change so it needs to be enacted \u0027WITHOUT VALIDATION\u0027\u003c/h4\u003e\n"
      },
      "dateCreated": "Oct 5, 2016 9:33:12 PM",
      "dateStarted": "Oct 5, 2016 10:18:02 PM",
      "dateFinished": "Oct 5, 2016 10:18:02 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\n\nALTER TABLE wurm_partitioned \nEXCHANGE PARTITION FOR (\u00272016-04-22\u0027) WITH TABLE s3_wurm_20160422 WITHOUT VALIDATION;",
      "dateUpdated": "Oct 6, 2016 4:18:58 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 99.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 6.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475705646715_-838638463",
      "id": "20161005-221406_676071532",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "Update Count\n0\n"
      },
      "dateCreated": "Oct 5, 2016 10:14:06 PM",
      "dateStarted": "Oct 6, 2016 4:18:58 PM",
      "dateFinished": "Oct 6, 2016 4:18:58 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\n\nALTER TABLE wurm_partitioned \nEXCHANGE PARTITION FOR (\u00272016-04-21\u0027) WITH TABLE s3_wurm_20160421 WITHOUT VALIDATION;",
      "dateUpdated": "Oct 6, 2016 4:19:00 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 99.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 6.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475705593787_-1687302591",
      "id": "20161005-221313_231981299",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "Update Count\n0\n"
      },
      "dateCreated": "Oct 5, 2016 10:13:13 PM",
      "dateStarted": "Oct 6, 2016 4:19:00 PM",
      "dateFinished": "Oct 6, 2016 4:19:01 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\n\nALTER TABLE wurm_partitioned \nEXCHANGE PARTITION FOR (\u00272016-04-20\u0027) WITH TABLE s3_wurm_20160420 WITHOUT VALIDATION;",
      "dateUpdated": "Oct 6, 2016 4:19:04 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 99.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 6.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475705540777_707161669",
      "id": "20161005-221220_45822831",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "Update Count\n0\n"
      },
      "dateCreated": "Oct 5, 2016 10:12:20 PM",
      "dateStarted": "Oct 6, 2016 4:19:04 PM",
      "dateFinished": "Oct 6, 2016 4:19:04 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\n\nALTER TABLE wurm_partitioned \nEXCHANGE PARTITION FOR (\u00272016-04-19\u0027) WITH TABLE s3_wurm_20160419 WITHOUT VALIDATION;",
      "dateUpdated": "Oct 6, 2016 4:19:06 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 99.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 6.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475705499427_-929437558",
      "id": "20161005-221139_382000971",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "Update Count\n0\n"
      },
      "dateCreated": "Oct 5, 2016 10:11:39 PM",
      "dateStarted": "Oct 6, 2016 4:19:06 PM",
      "dateFinished": "Oct 6, 2016 4:19:06 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\n\nALTER TABLE wurm_partitioned \nEXCHANGE PARTITION FOR (\u00272016-04-18\u0027) WITH TABLE s3_wurm_20160418 WITHOUT VALIDATION;",
      "dateUpdated": "Oct 6, 2016 4:19:08 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 97.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 6.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475705424783_-1066716295",
      "id": "20161005-221024_525608717",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "Update Count\n0\n"
      },
      "dateCreated": "Oct 5, 2016 10:10:24 PM",
      "dateStarted": "Oct 6, 2016 4:19:08 PM",
      "dateFinished": "Oct 6, 2016 4:19:08 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\n\nALTER TABLE wurm_partitioned \nEXCHANGE PARTITION FOR (\u00272016-04-17\u0027) WITH TABLE s3_wurm_20160417 WITHOUT VALIDATION;",
      "dateUpdated": "Oct 6, 2016 4:19:11 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 97.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 6.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475703519603_1685264537",
      "id": "20161005-213839_682155969",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "Update Count\n0\n"
      },
      "dateCreated": "Oct 5, 2016 9:38:39 PM",
      "dateStarted": "Oct 6, 2016 4:19:11 PM",
      "dateFinished": "Oct 6, 2016 4:19:11 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\n\nALTER TABLE wurm_partitioned \nEXCHANGE PARTITION FOR (\u00272016-04-16\u0027) WITH TABLE s3_wurm_20160416 WITHOUT VALIDATION;",
      "dateUpdated": "Oct 6, 2016 4:19:14 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 103.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 6.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475703868807_-516915574",
      "id": "20161005-214428_1974428945",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "Update Count\n0\n"
      },
      "dateCreated": "Oct 5, 2016 9:44:28 PM",
      "dateStarted": "Oct 6, 2016 4:19:14 PM",
      "dateFinished": "Oct 6, 2016 4:19:14 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\n\nALTER TABLE wurm_partitioned \nEXCHANGE PARTITION FOR (\u00272016-04-15\u0027) WITH TABLE s3_wurm_20160415 WITHOUT VALIDATION;",
      "dateUpdated": "Oct 6, 2016 4:19:16 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 99.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 6.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475703912406_1476529774",
      "id": "20161005-214512_1257246448",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "Update Count\n0\n"
      },
      "dateCreated": "Oct 5, 2016 9:45:12 PM",
      "dateStarted": "Oct 6, 2016 4:19:16 PM",
      "dateFinished": "Oct 6, 2016 4:19:16 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n#### We now have a structure that looks like a single table \n\n#### It is actually made up of two partitions that contain local data and eight partitions of data that are located on S3\n\n#### If we run an EXPLAIN on a query that hits the entire table we can now see it is doing an External Scan for some of the partitions of the table",
      "dateUpdated": "Oct 6, 2016 4:20:50 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475705901524_1778006514",
      "id": "20161005-221821_1845834852",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch4\u003eWe now have a structure that looks like a single table\u003c/h4\u003e\n\u003ch4\u003eIt is actually made up of two partitions that contain local data and eight partitions of data that are located on S3\u003c/h4\u003e\n\u003ch4\u003eIf we run an EXPLAIN on a query that hits the entire table we can now see it is doing an External Scan for some of the partitions of the table\u003c/h4\u003e\n"
      },
      "dateCreated": "Oct 5, 2016 10:18:21 PM",
      "dateStarted": "Oct 6, 2016 4:20:49 PM",
      "dateFinished": "Oct 6, 2016 4:20:50 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\nEXPLAIN SELECT COUNT(1) from wurm_partitioned;",
      "dateUpdated": "Oct 6, 2016 4:19:44 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475770777163_-837913358",
      "id": "20161006-161937_465750868",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "QUERY PLAN\nAggregate  (cost\u003d736273.33..736273.34 rows\u003d1 width\u003d8)\n  -\u003e  Gather Motion 4:1  (slice1; segments: 4)  (cost\u003d736273.26..736273.32 rows\u003d1 width\u003d8)\n        -\u003e  Aggregate  (cost\u003d736273.26..736273.27 rows\u003d1 width\u003d8)\n              -\u003e  Append  (cost\u003d0.00..614610.80 rows\u003d12166246 width\u003d0)\n                    -\u003e  External Scan on wurm_partitioned_1_prt_2 wurm_partitioned  (cost\u003d0.00..11000.00 rows\u003d250000 width\u003d0)\n                    -\u003e  External Scan on wurm_partitioned_1_prt_3 wurm_partitioned  (cost\u003d0.00..11000.00 rows\u003d250000 width\u003d0)\n                    -\u003e  External Scan on wurm_partitioned_1_prt_4 wurm_partitioned  (cost\u003d0.00..11000.00 rows\u003d250000 width\u003d0)\n                    -\u003e  External Scan on wurm_partitioned_1_prt_5 wurm_partitioned  (cost\u003d0.00..11000.00 rows\u003d250000 width\u003d0)\n                    -\u003e  External Scan on wurm_partitioned_1_prt_6 wurm_partitioned  (cost\u003d0.00..11000.00 rows\u003d250000 width\u003d0)\n                    -\u003e  External Scan on wurm_partitioned_1_prt_7 wurm_partitioned  (cost\u003d0.00..11000.00 rows\u003d250000 width\u003d0)\n                    -\u003e  External Scan on wurm_partitioned_1_prt_8 wurm_partitioned  (cost\u003d0.00..11000.00 rows\u003d250000 width\u003d0)\n                    -\u003e  External Scan on wurm_partitioned_1_prt_9 wurm_partitioned  (cost\u003d0.00..11000.00 rows\u003d250000 width\u003d0)\n                    -\u003e  Seq Scan on wurm_partitioned_1_prt_1 wurm_partitioned  (cost\u003d0.00..1.00 rows\u003d1 width\u003d0)\n                    -\u003e  Seq Scan on wurm_partitioned_1_prt_10 wurm_partitioned  (cost\u003d0.00..263010.68 rows\u003d5077242 width\u003d0)\n                    -\u003e  Seq Scan on wurm_partitioned_1_prt_11 wurm_partitioned  (cost\u003d0.00..263599.12 rows\u003d5089003 width\u003d0)\nOptimizer status: legacy query optimizer\n"
      },
      "dateCreated": "Oct 6, 2016 4:19:37 PM",
      "dateStarted": "Oct 6, 2016 4:19:44 PM",
      "dateFinished": "Oct 6, 2016 4:19:44 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\u0026nbsp;\n####So this query to see the Top 5 most common creature types over the day of the 23rd would only hit 20 million rows of local data",
      "dateUpdated": "Oct 6, 2016 4:22:09 PM",
      "config": {
        "tableHide": false,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "colWidth": 4.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475706178708_156100553",
      "id": "20161005-222258_868823984",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ch4\u003eSo this query to see the Top 5 most common creature types over the day of the 23rd would only hit 20 million rows of local data\u003c/h4\u003e\n"
      },
      "dateCreated": "Oct 5, 2016 10:22:58 PM",
      "dateStarted": "Oct 6, 2016 4:22:07 PM",
      "dateFinished": "Oct 6, 2016 4:22:07 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\n\nSELECT COUNT(DISTINCT(wurmid)), \n       name \nFROM wurm_partitioned \nWHERE recordedAt BETWEEN \u00272016-04-23 00:00:00\u0027 AND \u00272016-04-23 23:59:59\u0027\nGROUP BY name\nORDER BY 1 DESC\nLIMIT 8;",
      "dateUpdated": "Oct 6, 2016 4:20:59 PM",
      "config": {
        "graph": {
          "mode": "multiBarChart",
          "height": 194.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "name",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "count",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "name",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 8.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475706220826_-1487885525",
      "id": "20161005-222340_67589976",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "count\tname\n1291\tBull\n1211\tBlack wolf\n1173\tBrown cow\n907\tMountain lion\n869\tHorse\n609\tDeer\n605\tPheasant\n605\tBrown bear\n"
      },
      "dateCreated": "Oct 5, 2016 10:23:40 PM",
      "dateStarted": "Oct 6, 2016 4:20:59 PM",
      "dateFinished": "Oct 6, 2016 4:21:05 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\u0026nbsp;\n####Doing the same query on a date like the 18th will access a similar amount of data in S3, but will have a longer run time as it needs to bring all that data across the network.",
      "dateUpdated": "Oct 6, 2016 4:23:13 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "colWidth": 4.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475707024305_1894222584",
      "id": "20161005-223704_1818009418",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ch4\u003eDoing the same query on a date like the 18th will access a similar amount of data in S3, but will have a longer run time as it needs to bring all that data across the network.\u003c/h4\u003e\n"
      },
      "dateCreated": "Oct 5, 2016 10:37:04 PM",
      "dateStarted": "Oct 6, 2016 4:23:11 PM",
      "dateFinished": "Oct 6, 2016 4:23:11 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\n\nSELECT COUNT(DISTINCT(wurmid)), \n       name \nFROM wurm_partitioned \nWHERE recordedAt BETWEEN \u00272016-04-18 00:00:00\u0027 AND \u00272016-04-18 23:59:59\u0027\nGROUP BY name\nORDER BY 1 DESC\nLIMIT 8;",
      "dateUpdated": "Oct 6, 2016 4:21:12 PM",
      "config": {
        "graph": {
          "mode": "multiBarChart",
          "height": 199.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "name",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "count",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "name",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 8.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475707074597_992432459",
      "id": "20161005-223754_1278551274",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "count\tname\n1413\tBull\n1298\tBrown cow\n1190\tBlack wolf\n1023\tHorse\n888\tMountain lion\n602\tDeer\n599\tPheasant\n568\tBrown bear\n"
      },
      "dateCreated": "Oct 5, 2016 10:37:54 PM",
      "dateStarted": "Oct 6, 2016 4:21:12 PM",
      "dateFinished": "Oct 6, 2016 4:22:50 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\u0026nbsp;\n####Having the data avaialbe would allow you to do exploration and answer some immediate question that might come to mind\n\n####For example how many creatures exist on the 23rd that didn\u0027t exist on the 20th could be answered using both a partition of the local data and a partition of the external data",
      "dateUpdated": "Oct 6, 2016 4:50:48 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "colWidth": 6.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475706945576_-229514723",
      "id": "20161005-223545_1243843614",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ch4\u003eHaving the data avaialbe would allow you to do exploration and answer some immediate question that might come to mind\u003c/h4\u003e\n\u003ch4\u003eFor example how many creatures exist on the 23rd that didn\u0027t exist on the 20th could be answered using both a partition of the local data and a partition of the external data\u003c/h4\u003e\n"
      },
      "dateCreated": "Oct 5, 2016 10:35:45 PM",
      "dateStarted": "Oct 6, 2016 4:50:47 PM",
      "dateFinished": "Oct 6, 2016 4:50:47 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\n\nSELECT COUNT(DISTINCT(wurmid))\nFROM wurm_partitioned \nWHERE recordedAt BETWEEN \u00272016-04-23 00:00:00\u0027 AND \u00272016-04-23 23:59:59\u0027\nAND wurmid NOT IN (\n    SELECT wurmid \n    FROM wurm_partitioned\n    WHERE recordedAt BETWEEN \u00272016-04-20 00:00:00\u0027 AND \u00272016-04-20 23:59:59\u0027\n    )\n",
      "dateUpdated": "Oct 5, 2016 11:35:46 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 99.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "count",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 6.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475707316067_-2016827956",
      "id": "20161005-224156_740953511",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "count\n921\n"
      },
      "dateCreated": "Oct 5, 2016 10:41:56 PM",
      "dateStarted": "Oct 5, 2016 11:29:47 PM",
      "dateFinished": "Oct 5, 2016 11:31:43 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\u0026nbsp;\n####Another example would be looking at the population of creatures day to day.\n\n####While you can get a feel for what is happening with the two days of local data.",
      "dateUpdated": "Oct 6, 2016 4:26:59 PM",
      "config": {
        "colWidth": 6.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475710923006_1090348321",
      "id": "20161005-234203_1616729006",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ch4\u003eAnother example would be looking at the population of creatures day to day.\u003c/h4\u003e\n\u003ch4\u003eWhile you can get a feel for what is happening with the two days of local data.\u003c/h4\u003e\n"
      },
      "dateCreated": "Oct 5, 2016 11:42:03 PM",
      "dateStarted": "Oct 6, 2016 4:26:58 PM",
      "dateFinished": "Oct 6, 2016 4:26:58 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\nSELECT COUNT(DISTINCT(wurmid)) as \"count\", recordedAt::date as \"date\", name\nFROM wurm_partitioned\nWHERE recordedAt BETWEEN \u00272016-04-23 00:00:00\u0027 AND \u00272016-04-24 23:59:59\u0027\nAND name IN (\u0027Black wolf\u0027,\u0027Horse\u0027,\u0027Brown cow\u0027,\u0027Bull\u0027,\u0027Brown bear\u0027,\u0027Mountain lion\u0027,\u0027Deer\u0027,\u0027Black Bear\u0027)\nGROUP BY recordedAt::date, name\nORDER BY date, name\n",
      "dateUpdated": "Oct 6, 2016 5:03:25 PM",
      "config": {
        "colWidth": 6.0,
        "graph": {
          "mode": "lineChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "date",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "count",
              "index": 0.0,
              "aggr": "avg"
            }
          ],
          "groups": [
            {
              "name": "name",
              "index": 2.0,
              "aggr": "sum"
            }
          ],
          "scatter": {
            "xAxis": {
              "name": "date",
              "index": 1.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "count",
              "index": 0.0,
              "aggr": "sum"
            },
            "group": {
              "name": "name",
              "index": 2.0,
              "aggr": "sum"
            }
          },
          "forceY": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475710937271_-1679058937",
      "id": "20161005-234217_1431904083",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "count\tdate\tname\n1211\t2016-04-23\tBlack wolf\n605\t2016-04-23\tBrown bear\n1173\t2016-04-23\tBrown cow\n1291\t2016-04-23\tBull\n609\t2016-04-23\tDeer\n869\t2016-04-23\tHorse\n907\t2016-04-23\tMountain lion\n1226\t2016-04-24\tBlack wolf\n612\t2016-04-24\tBrown bear\n1171\t2016-04-24\tBrown cow\n1291\t2016-04-24\tBull\n601\t2016-04-24\tDeer\n910\t2016-04-24\tHorse\n911\t2016-04-24\tMountain lion\n"
      },
      "dateCreated": "Oct 5, 2016 11:42:17 PM",
      "dateStarted": "Oct 6, 2016 5:03:25 PM",
      "dateFinished": "Oct 6, 2016 5:08:37 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\u0026nbsp;\n####The data makes much more sense if you were to mix in a larger history of the data.\n\n####Seeing this of course you would realize that creating a rollup of this type of data would make sense.",
      "dateUpdated": "Oct 6, 2016 4:29:58 PM",
      "config": {
        "colWidth": 6.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475711471832_-150866431",
      "id": "20161005-235111_181716330",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ch4\u003eThe data makes much more sense if you were to mix in a larger history of the data.\u003c/h4\u003e\n\u003ch4\u003eSeeing this of course you would realize that creating a rollup of this type of data would make sense.\u003c/h4\u003e\n"
      },
      "dateCreated": "Oct 5, 2016 11:51:11 PM",
      "dateStarted": "Oct 6, 2016 4:29:57 PM",
      "dateFinished": "Oct 6, 2016 4:29:57 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\nSELECT COUNT(DISTINCT(wurmid)) as \"count\", recordedAt::date as \"date\", name\nFROM wurm_partitioned\nWHERE recordedAt BETWEEN \u00272016-04-18 00:00:00\u0027 AND \u00272016-04-24 23:59:59\u0027\nAND name IN (\u0027Black wolf\u0027,\u0027Horse\u0027,\u0027Brown cow\u0027,\u0027Bull\u0027,\u0027Brown bear\u0027,\u0027Mountain lion\u0027,\u0027Deer\u0027,\u0027Black Bear\u0027)\nGROUP BY recordedAt::date, name\nORDER BY date, name",
      "dateUpdated": "Oct 6, 2016 5:03:00 PM",
      "config": {
        "colWidth": 6.0,
        "graph": {
          "mode": "lineChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "date",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "count",
              "index": 0.0,
              "aggr": "avg"
            }
          ],
          "groups": [
            {
              "name": "name",
              "index": 2.0,
              "aggr": "sum"
            }
          ],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475711483406_1157679903",
      "id": "20161005-235123_1630641787",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "count\tdate\tname\n1190\t2016-04-18\tBlack wolf\n568\t2016-04-18\tBrown bear\n1298\t2016-04-18\tBrown cow\n1413\t2016-04-18\tBull\n602\t2016-04-18\tDeer\n1023\t2016-04-18\tHorse\n888\t2016-04-18\tMountain lion\n1206\t2016-04-19\tBlack wolf\n591\t2016-04-19\tBrown bear\n1305\t2016-04-19\tBrown cow\n1428\t2016-04-19\tBull\n619\t2016-04-19\tDeer\n1059\t2016-04-19\tHorse\n902\t2016-04-19\tMountain lion\n1246\t2016-04-20\tBlack wolf\n600\t2016-04-20\tBrown bear\n1309\t2016-04-20\tBrown cow\n1281\t2016-04-20\tBull\n610\t2016-04-20\tDeer\n1058\t2016-04-20\tHorse\n933\t2016-04-20\tMountain lion\n1204\t2016-04-21\tBlack wolf\n602\t2016-04-21\tBrown bear\n1315\t2016-04-21\tBrown cow\n1293\t2016-04-21\tBull\n601\t2016-04-21\tDeer\n1040\t2016-04-21\tHorse\n902\t2016-04-21\tMountain lion\n1217\t2016-04-22\tBlack wolf\n608\t2016-04-22\tBrown bear\n1314\t2016-04-22\tBrown cow\n1294\t2016-04-22\tBull\n626\t2016-04-22\tDeer\n1060\t2016-04-22\tHorse\n907\t2016-04-22\tMountain lion\n1211\t2016-04-23\tBlack wolf\n605\t2016-04-23\tBrown bear\n1173\t2016-04-23\tBrown cow\n1291\t2016-04-23\tBull\n609\t2016-04-23\tDeer\n869\t2016-04-23\tHorse\n907\t2016-04-23\tMountain lion\n1226\t2016-04-24\tBlack wolf\n612\t2016-04-24\tBrown bear\n1171\t2016-04-24\tBrown cow\n1291\t2016-04-24\tBull\n601\t2016-04-24\tDeer\n910\t2016-04-24\tHorse\n911\t2016-04-24\tMountain lion\n"
      },
      "dateCreated": "Oct 5, 2016 11:51:23 PM",
      "dateStarted": "Oct 6, 2016 5:03:00 PM",
      "dateFinished": "Oct 6, 2016 5:08:25 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\u0026nbsp;\n####So you would create a rollup table that was local so later displays would only need to hit the summary table",
      "dateUpdated": "Oct 6, 2016 4:30:56 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475771388745_341980179",
      "id": "20161006-162948_453803059",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003ch4\u003eSo you would create a rollup table that was local so later displays would only need to hit the summary table\u003c/h4\u003e\n"
      },
      "dateCreated": "Oct 6, 2016 4:29:48 PM",
      "dateStarted": "Oct 6, 2016 4:30:53 PM",
      "dateFinished": "Oct 6, 2016 4:30:54 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\nDROP TABLE IF EXISTS creature_population;\nCREATE TABLE creature_population AS (\nSELECT COUNT(DISTINCT(wurmid)) as \"count\", recordedAt::date as \"date\", name\nFROM wurm_partitioned\nWHERE recordedAt BETWEEN \u00272016-04-18 00:00:00\u0027 AND \u00272016-04-24 23:59:59\u0027\nAND name IN (\u0027Black wolf\u0027,\u0027Horse\u0027,\u0027Brown cow\u0027,\u0027Bull\u0027,\u0027Brown bear\u0027,\u0027Mountain lion\u0027,\u0027Deer\u0027,\u0027Black Bear\u0027)\nGROUP BY recordedAt::date, name );",
      "dateUpdated": "Oct 6, 2016 5:00:51 PM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 94.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475771466252_422331402",
      "id": "20161006-163106_341960782",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "Update Count\n0\n"
      },
      "dateCreated": "Oct 6, 2016 4:31:06 PM",
      "dateStarted": "Oct 6, 2016 4:50:03 PM",
      "dateFinished": "Oct 6, 2016 4:55:32 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\nSELECT * from creature_population\nORDER BY date, name;",
      "dateUpdated": "Oct 6, 2016 5:02:40 PM",
      "config": {
        "colWidth": 8.0,
        "graph": {
          "mode": "lineChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "date",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "groups": [
            {
              "name": "name",
              "index": 2.0,
              "aggr": "sum"
            }
          ],
          "scatter": {
            "xAxis": {
              "name": "count",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "date",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475771561965_294148722",
      "id": "20161006-163241_1799456698",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "count\tdate\tname\n1190\t2016-04-18\tBlack wolf\n568\t2016-04-18\tBrown bear\n1298\t2016-04-18\tBrown cow\n1413\t2016-04-18\tBull\n602\t2016-04-18\tDeer\n1023\t2016-04-18\tHorse\n888\t2016-04-18\tMountain lion\n1206\t2016-04-19\tBlack wolf\n591\t2016-04-19\tBrown bear\n1305\t2016-04-19\tBrown cow\n1428\t2016-04-19\tBull\n619\t2016-04-19\tDeer\n1059\t2016-04-19\tHorse\n902\t2016-04-19\tMountain lion\n1246\t2016-04-20\tBlack wolf\n600\t2016-04-20\tBrown bear\n1309\t2016-04-20\tBrown cow\n1281\t2016-04-20\tBull\n610\t2016-04-20\tDeer\n1058\t2016-04-20\tHorse\n933\t2016-04-20\tMountain lion\n1204\t2016-04-21\tBlack wolf\n602\t2016-04-21\tBrown bear\n1315\t2016-04-21\tBrown cow\n1293\t2016-04-21\tBull\n601\t2016-04-21\tDeer\n1040\t2016-04-21\tHorse\n902\t2016-04-21\tMountain lion\n1217\t2016-04-22\tBlack wolf\n608\t2016-04-22\tBrown bear\n1314\t2016-04-22\tBrown cow\n1294\t2016-04-22\tBull\n626\t2016-04-22\tDeer\n1060\t2016-04-22\tHorse\n907\t2016-04-22\tMountain lion\n1211\t2016-04-23\tBlack wolf\n605\t2016-04-23\tBrown bear\n1173\t2016-04-23\tBrown cow\n1291\t2016-04-23\tBull\n609\t2016-04-23\tDeer\n869\t2016-04-23\tHorse\n907\t2016-04-23\tMountain lion\n1226\t2016-04-24\tBlack wolf\n612\t2016-04-24\tBrown bear\n1171\t2016-04-24\tBrown cow\n1291\t2016-04-24\tBull\n601\t2016-04-24\tDeer\n910\t2016-04-24\tHorse\n911\t2016-04-24\tMountain lion\n"
      },
      "dateCreated": "Oct 6, 2016 4:32:41 PM",
      "dateStarted": "Oct 6, 2016 5:02:40 PM",
      "dateFinished": "Oct 6, 2016 5:02:40 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n##-----------------------------------------------------------------------------------------------------------------------------",
      "dateUpdated": "Oct 6, 2016 12:06:12 AM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475701452293_-1960941661",
      "id": "20161005-210412_1902327750",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003e\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026mdash;\u0026ndash;\u003c/h2\u003e\n"
      },
      "dateCreated": "Oct 5, 2016 9:04:12 PM",
      "dateStarted": "Oct 5, 2016 9:04:41 PM",
      "dateFinished": "Oct 5, 2016 9:04:41 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%psql\n--cleanup\n--if a command does not work comment it out and rerun\n--uncomment all drops initially\n--DROP TABLE IF EXISTS s3_wurm_20160415 CASCADE;\n--DROP TABLE IF EXISTS s3_wurm_20160416 CASCADE;\n--DROP TABLE IF EXISTS s3_wurm_20160417 CASCADE;\n--DROP TABLE IF EXISTS s3_wurm_20160418 CASCADE;\n--DROP TABLE IF EXISTS s3_wurm_20160419 CASCADE;\n--DROP TABLE IF EXISTS s3_wurm_20160420 CASCADE;\n--DROP TABLE IF EXISTS s3_wurm_20160421 CASCADE;\n--DROP TABLE IF EXISTS s3_wurm_20160422 CASCADE;\n--DROP TABLE IF EXISTS s3_wurm_20160423 CASCADE;\n--DROP TABLE IF EXISTS s3_wurm_20160424 CASCADE;\n\nDROP EXTERNAL TABLE IF EXISTS s3_wurm_20160415 CASCADE;\nDROP EXTERNAL TABLE IF EXISTS s3_wurm_20160416 CASCADE;\nDROP EXTERNAL TABLE IF EXISTS s3_wurm_20160417 CASCADE;\nDROP EXTERNAL TABLE IF EXISTS s3_wurm_20160418 CASCADE;\nDROP EXTERNAL TABLE IF EXISTS s3_wurm_20160419 CASCADE;\nDROP EXTERNAL TABLE IF EXISTS s3_wurm_20160420 CASCADE;\nDROP EXTERNAL TABLE IF EXISTS s3_wurm_20160421 CASCADE;\nDROP EXTERNAL TABLE IF EXISTS s3_wurm_20160422 CASCADE;\nDROP EXTERNAL TABLE IF EXISTS s3_wurm_20160423 CASCADE;\nDROP EXTERNAL TABLE IF EXISTS s3_wurm_20160424 CASCADE;\n\nDROP TABLE IF EXISTS wurm_20160415;\nDROP TABLE IF EXISTS wurm_partitioned;\nDROP TABLE IF EXISTS creature_population;",
      "dateUpdated": "Oct 6, 2016 4:51:47 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 294.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "Update Count",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12.0,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475704299858_1120968716",
      "id": "20161005-215139_1535086333",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "Update Count\n0\n"
      },
      "dateCreated": "Oct 5, 2016 9:51:39 PM",
      "dateStarted": "Oct 6, 2016 2:49:21 PM",
      "dateFinished": "Oct 6, 2016 2:49:22 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "dateUpdated": "Oct 5, 2016 11:35:46 PM",
      "config": {
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1473264764685_249760576",
      "id": "20160907-161244_514343028",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT"
      },
      "dateCreated": "Sep 7, 2016 4:12:44 PM",
      "dateStarted": "Sep 28, 2016 6:46:49 PM",
      "dateFinished": "Sep 28, 2016 6:47:23 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "S3 at larger Scale",
  "id": "2BZ5RWTE3",
  "angularObjects": {
    "2BVAQ5WDV": [],
    "2BUBUR53Y": [],
    "2BWBUNN8F": [],
    "2BX52PV15": [],
    "2BTPQP66W": [],
    "2BUFFURRG": [],
    "2BXDE4KGQ": [],
    "2BV2P597C": [],
    "2BW8AHX86": [],
    "2BU8BGB1A": [],
    "2BVRVNZZ7": [],
    "2BVGHJ1NZ": [],
    "2BUBFDCQC": [],
    "2BXDF9HKS": [],
    "2BU94PUM5": []
  },
  "config": {},
  "info": {}
}